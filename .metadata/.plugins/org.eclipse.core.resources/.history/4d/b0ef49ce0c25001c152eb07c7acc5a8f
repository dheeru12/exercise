package com.demo.application.service;

import java.util.List;
import java.util.stream.Collectors;

import org.reflections.Reflections;
import org.reflections.scanners.MethodAnnotationsScanner;
import org.reflections.scanners.SubTypesScanner;
import org.reflections.scanners.TypeAnnotationsScanner;
import org.reflections.util.ClasspathHelper;
import org.reflections.util.ConfigurationBuilder;
import org.springframework.stereotype.Service;

import com.demo.application.checks.Check;
import com.demo.application.model.Transaction;

@Service
public class ApplicationService {

	public void executeChecks(Transaction transaction) {

		ConfigurationBuilder builder = new ConfigurationBuilder().setUrls(ClasspathHelper.forJavaClassPath())
				.setScanners(new SubTypesScanner()).setScanners(new TypeAnnotationsScanner());

		Reflections reflections = new Reflections(builder);

		List<Boolean> checks = reflections.getTypesAnnotatedWith(Check.class).parallelStream().map(method -> {
			try {
				System.out.println(method.getName());
				return true;
			} catch (Exception e) {
				e.printStackTrace();
			}
			return false;
		}).collect(Collectors.toList());

		System.out.println(checks);

	}
}
