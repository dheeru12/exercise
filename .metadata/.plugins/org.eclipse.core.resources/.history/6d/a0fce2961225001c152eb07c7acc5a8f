package com.demo.application.service;

import java.lang.reflect.InvocationTargetException;
import java.util.List;
import java.util.stream.Collectors;

import org.reflections.Reflections;
import org.reflections.scanners.MethodAnnotationsScanner;
import org.reflections.util.ClasspathHelper;
import org.reflections.util.ConfigurationBuilder;
import org.springframework.stereotype.Service;

import com.demo.application.checks.Check;
import com.demo.application.model.Transaction;

@Service
public class ApplicationService {

	public void executeChecks(Transaction transaction) {

		ConfigurationBuilder builder = new ConfigurationBuilder().setUrls(ClasspathHelper.forPackage("com.demo.application"));

		Reflections reflections = new Reflections(builder);
		
		reflections.getSubTypesOf(Check.class).parallelStream().forEach(aclass -> {
			try {
				Check check = aclass.getDeclaredConstructor().newInstance();
				check.verify(transaction);
			} catch (Exception e) {
				e.printStackTrace();
			} 
		});

	}
}
